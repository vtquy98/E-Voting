type Election {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  electionAddress: String!
  createdAt: Date!
  updatedAt: Date!
  # startedAt: Date!
  state: ElectionState!
}

enum ElectionState {
  CREATED
  STARTED
  ENDED
}

type Query {
  get_all_election: Election!
  get_election(id: String!): Election!
  get_all_candidate(ElectionAddress: String!): [User!]!
  get_all_voter(ElectionAddress: String!): [User!]!
}

type Mutation {
  create_election(
    name: String
    description: String!
    thumbnail: String!
  ): Election!

  add_candidate(
    userId: String!
    description: String!
    ElectionAddress: String!
  ): User!

  add_voter(userId: String!, ElectionAddress: String!): User!
  start_voting(ElectionAddress: String!): Election!
  end_voting(ElectionAddress: String!): Election!
}
